name: Deploy Jekyll to GitHub Pages

on:
  push:
    branches: [ main ]
  schedule:
    # 매일 오전 9시에 자동 실행 (UTC 기준 0시)
    - cron: '0 0 * * *'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # 전체 히스토리 가져오기
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
        
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml
          
      - name: Pull latest changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin main --rebase
          
      - name: Run Auto Blog Generator
        run: |
          cd scripts
          python auto_blog_generator.py
          
      - name: Commit and push if changes
        run: |
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "자동 포스트 생성 - $(date '+%Y-%m-%d %H:%M:%S')"
            git push origin main
          else
            echo "변경사항이 없습니다."
          fi
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
          
      - name: Install dependencies
        run: |
          bundle config set --local deployment false
          bundle install
          
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
